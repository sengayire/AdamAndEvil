{"ast":null,"code":"import _defineProperty from \"/Users/sengayire.prince/Projects/react-material-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/Users/sengayire.prince/Projects/react-material-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/sengayire.prince/Projects/react-material-kit/src/components/CustomInput/CustomInput.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport customInputStyle from \"assets/jss/material-kit-react/components/customInputStyle.jsx\";\n\nfunction CustomInput(_ref) {\n  var _classNames, _classNames2, _classNames4;\n\n  var props = _extends({}, _ref);\n\n  var classes = props.classes,\n      formControlProps = props.formControlProps,\n      labelText = props.labelText,\n      id = props.id,\n      labelProps = props.labelProps,\n      inputProps = props.inputProps,\n      error = props.error,\n      white = props.white,\n      inputRootCustomClasses = props.inputRootCustomClasses,\n      success = props.success,\n      errors = props.errors,\n      onChange = props.onChange,\n      value = props.value,\n      name = props.name;\n  var labelClasses = classNames((_classNames = {}, _defineProperty(_classNames, \" \" + classes.labelRootError, error), _defineProperty(_classNames, \" \" + classes.labelRootSuccess, success && !error), _classNames));\n  var underlineClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.underlineError, error), _defineProperty(_classNames2, classes.underlineSuccess, success && !error), _defineProperty(_classNames2, classes.underline, true), _defineProperty(_classNames2, classes.whiteUnderline, white), _classNames2));\n  var marginTop = classNames(_defineProperty({}, inputRootCustomClasses, inputRootCustomClasses !== undefined));\n  var inputClasses = classNames((_classNames4 = {}, _defineProperty(_classNames4, classes.input, true), _defineProperty(_classNames4, classes.whiteInput, white), _classNames4));\n  var formControlClasses;\n\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(formControlProps.className, classes.formControl);\n  } else {\n    formControlClasses = classes.formControl;\n  }\n\n  return React.createElement(FormControl, Object.assign({}, formControlProps, {\n    className: formControlClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), labelText !== undefined ? React.createElement(InputLabel, Object.assign({\n    className: classes.labelRoot + \" \" + labelClasses,\n    htmlFor: id\n  }, labelProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), labelText) : null, React.createElement(Input, Object.assign({\n    onChange: onChange,\n    name: name,\n    value: value,\n    classes: {\n      input: inputClasses,\n      root: marginTop,\n      disabled: classes.disabled,\n      underline: underlineClasses\n    },\n    id: id\n  }, inputProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    style: {\n      padding: 0,\n      margin: 0,\n      marginTop: 10,\n      listStyleType: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, errors && errors.map(function (message) {\n    return React.createElement(\"li\", {\n      key: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, message));\n  })));\n}\n\nCustomInput.propTypes = {\n  classes: PropTypes.object.isRequired,\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};\nexport default withStyles(customInputStyle)(CustomInput);","map":{"version":3,"sources":["/Users/sengayire.prince/Projects/react-material-kit/src/components/CustomInput/CustomInput.jsx"],"names":["React","PropTypes","classNames","withStyles","FormControl","InputLabel","Input","customInputStyle","CustomInput","props","classes","formControlProps","labelText","id","labelProps","inputProps","error","white","inputRootCustomClasses","success","errors","onChange","value","name","labelClasses","labelRootError","labelRootSuccess","underlineClasses","underlineError","underlineSuccess","underline","whiteUnderline","marginTop","undefined","inputClasses","input","whiteInput","formControlClasses","className","formControl","labelRoot","root","disabled","padding","margin","listStyleType","map","message","color","propTypes","object","isRequired","node","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n\nimport customInputStyle from \"assets/jss/material-kit-react/components/customInputStyle.jsx\";\n\nfunction CustomInput({ ...props }) {\n  const {\n    classes,\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    white,\n    inputRootCustomClasses,\n    success,\n    errors,\n    onChange,\n    value,\n    name\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n    [classes.whiteUnderline]: white\n  });\n  const marginTop = classNames({\n    [inputRootCustomClasses]: inputRootCustomClasses !== undefined\n  });\n  const inputClasses = classNames({\n    [classes.input]: true,\n    [classes.whiteInput]: white\n  });\n  var formControlClasses;\n  if (formControlProps !== undefined) {\n    formControlClasses = classNames(\n      formControlProps.className,\n      classes.formControl\n    );\n  } else {\n    formControlClasses = classes.formControl;\n  }\n  return (\n    <FormControl {...formControlProps} className={formControlClasses}>\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + \" \" + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        onChange={onChange}\n        name={name}\n        value={value}\n        classes={{\n          input: inputClasses,\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        {...inputProps}\n      />\n      <ul\n        style={{ padding: 0, margin: 0, marginTop: 10, listStyleType: \"none\" }}\n      >\n        {errors &&\n          errors.map(message => (\n            <li key={message}>\n              <p style={{ color: \"red\", margin: 0 }}>{message}</p>\n            </li>\n          ))}\n      </ul>\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  classes: PropTypes.object.isRequired,\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  inputRootCustomClasses: PropTypes.string,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  white: PropTypes.bool\n};\n\nexport default withStyles(customInputStyle)(CustomInput);\n"]},"metadata":{},"sourceType":"module"}